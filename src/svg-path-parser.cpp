#line 1 "/home/michael/2geom/src/svg-path-parser.rl"
/*
 * parse SVG path specifications
 *
 * Copyright 2007 MenTaLguY <mental@rydia.net>
 * Copyright 2007 Aaron Spike <aaron@ekips.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it either under the terms of the GNU Lesser General Public
 * License version 2.1 as published by the Free Software Foundation
 * (the "LGPL") or, at your option, under the terms of the Mozilla
 * Public License Version 1.1 (the "MPL"). If you do not alter this
 * notice, a recipient may use your version of this file under either
 * the MPL or the LGPL.
 *
 * You should have received a copy of the LGPL along with this library
 * in the file COPYING-LGPL-2.1; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * You should have received a copy of the MPL along with this library
 * in the file COPYING-MPL-1.1
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY
 * OF ANY KIND, either express or implied. See the LGPL or the MPL for
 * the specific language governing rights and limitations.
 *
 */


#include <cmath>
#include <vector>

#include "point.h"

#include "svg-path-parser.h"

namespace Geom {

namespace {

class Parser {
public:
    Parser(SVGPathSink &sink) : _sink(sink) {}

    void parse(char const *str) throw(SVGPathParseError);

private:
    bool _absolute;
    Point _current;
    Point _initial;
    Point _cubic_tangent;
    Point _quad_tangent;
    std::vector<double> _params;
    SVGPathSink &_sink;

    void _reset() {
        _absolute = false;
        _current = _initial = Point(0, 0);
        _quad_tangent = _cubic_tangent = Point(0, 0);
        _params.clear();
    }

    void _push(double value) {
        _params.push_back(value);
    }

    double _pop() {
        double value = _params.back();
        _params.pop_back();
        return value;
    }

    bool _pop_flag() {
        return _pop() != 0.0;
    }

    double _pop_coord(Geom::Dim2 axis) {
        if (_absolute) {
            return _pop();
        } else {
            return _pop() + _current[axis];
        }
    }

    Point _pop_point() {
        double y = _pop_coord(Geom::Y);
        double x = _pop_coord(Geom::X);
        return Point(x, y);
    }

    void _moveTo(Point p) {
        _quad_tangent = _cubic_tangent = _current = _initial = p;
        _sink.moveTo(p);
    }

    void _lineTo(Point p) {
        _quad_tangent = _cubic_tangent = _current = p;
        _sink.lineTo(p);
    }

    void _curveTo(Point c0, Point c1, Point p) {
        _quad_tangent = _current = p;
        _cubic_tangent = p + ( p - c1 );
        _sink.curveTo(c0, c1, p);
    }

    void _quadTo(Point c, Point p) {
        _cubic_tangent = _current = p;
        _quad_tangent = p + ( p - c );
        _sink.quadTo(c, p);
    }

    void _arcTo(double rx, double ry, double angle,
                bool large_arc, bool sweep, Point p)
    {
        _quad_tangent = _cubic_tangent = _current = p;
        _sink.arcTo(rx, ry, angle, large_arc, sweep, p);
    }

    void _closePath() {
        _quad_tangent = _cubic_tangent = _current = _initial;
        _sink.closePath();
    }
};


#line 132 "/home/michael/2geom/src/svg-path-parser.cpp"
static unsigned char _svg_path_a[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 15, 1, 
	16, 2, 1, 0, 2, 1, 2, 2, 
	1, 3, 2, 1, 6, 2, 1, 7, 
	2, 1, 8, 2, 1, 9, 2, 1, 
	10, 2, 1, 11, 2, 1, 12, 2, 
	1, 13, 2, 1, 14, 2, 2, 1, 
	2, 3, 1, 2, 4, 0, 2, 5, 
	0, 2, 15, 16, 3, 1, 6, 0, 
	3, 1, 6, 16, 3, 1, 7, 0, 
	3, 1, 7, 16, 3, 1, 8, 0, 
	3, 1, 8, 16, 3, 1, 9, 0, 
	3, 1, 9, 16, 3, 1, 10, 0, 
	3, 1, 10, 16, 3, 1, 11, 0, 
	3, 1, 11, 16, 3, 1, 12, 0, 
	3, 1, 12, 16, 3, 1, 13, 0, 
	3, 1, 13, 16, 3, 1, 14, 0, 
	3, 1, 14, 16
};

static unsigned short _svg_path_ko[] = {
	0, 7, 7, 16, 25, 28, 30, 42, 
	52, 55, 57, 90, 121, 124, 126, 138, 
	148, 151, 153, 186, 195, 207, 216, 249, 
	256, 263, 265, 275, 283, 290, 292, 304, 
	314, 317, 319, 328, 335, 341, 346, 353, 
	359, 364, 374, 377, 379, 391, 401, 404, 
	406, 437, 466, 476, 488, 498, 507, 509, 
	521, 533, 544, 554, 561, 567, 572, 584, 
	595, 607, 617, 620, 622, 655, 664, 695, 
	704, 713, 716, 718, 730, 740, 743, 745, 
	757, 767, 770, 772, 784, 794, 797, 799, 
	811, 821, 824, 826, 838, 848, 851, 853, 
	886, 917, 929, 938, 950, 959, 971, 980, 
	992, 1001, 1013, 1022, 1055, 1059, 1061, 1092, 
	1101, 1110, 1113, 1115, 1148, 1179, 1212, 1216, 
	1218, 1249, 1258, 1267, 1276, 1279, 1281, 1293, 
	1303, 1306, 1308, 1320, 1330, 1333, 1335, 1347, 
	1357, 1360, 1362, 1395, 1426, 1438, 1447, 1459, 
	1468, 1480, 1489, 1522, 1526, 1528, 1559, 1568, 
	1577, 1580, 1582, 1594, 1604, 1607, 1609, 1621, 
	1631, 1634, 1636, 1648, 1658, 1661, 1663, 1696, 
	1727, 1739, 1748, 1760, 1769, 1781, 1790, 1823, 
	1827, 1829, 1860, 1869, 1878, 1881, 1883, 1895, 
	1905, 1908, 1910, 1943, 1974, 1986, 1995, 2028, 
	2032, 2034, 2065, 2074, 2083, 2086, 2088, 2121, 
	2152, 2185, 2189, 2191, 2222, 2247, 2272, 2279, 
	2288, 2297, 2306, 2315, 2327, 2336, 2369, 2373, 
	2375, 2406, 2415, 2424, 2433, 2442, 2446, 2448, 
	2458, 2462, 2464, 2474, 2478, 2480, 2490, 2494, 
	2496, 2506, 2510, 2512, 2522, 2526, 2528, 2538, 
	2542, 2544, 2554, 2558, 2560, 2570, 2574, 2576, 
	2586, 2590, 2592, 2602, 2606, 2608, 2618, 2622, 
	2624, 2634, 2638, 2640, 2650, 2654, 2656, 2685, 
	2689, 2691, 2722, 2755, 2764, 2776, 2780, 2782, 
	2792, 2804, 2809, 2819, 2823, 2825, 2832, 2842, 
	2846, 2848, 2858, 2870, 2882, 2894, 2898, 2900, 
	2910, 2922, 2926, 2928, 2938, 2947, 2951, 2953, 
	2961, 2970, 2975, 2980, 2992, 2996, 2998, 3029, 
	3033, 3035, 3045
};

static char _svg_path_k[] = {
	0, 13, 32, 77, 109, 9, 10, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	69, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 101, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	69, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 101, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 46, 9, 10, 48, 57, 
	13, 32, 46, 9, 10, 48, 57, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 48, 57, 13, 32, 44, 46, 9, 
	10, 48, 57, 13, 32, 46, 9, 10, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 46, 48, 57, 48, 57, 13, 
	32, 44, 69, 101, 9, 10, 48, 57, 
	13, 32, 44, 48, 49, 9, 10, 13, 
	32, 48, 49, 9, 10, 13, 32, 44, 
	9, 10, 13, 32, 44, 48, 49, 9, 
	10, 13, 32, 48, 49, 9, 10, 13, 
	32, 44, 9, 10, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 46, 48, 
	57, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 48, 57, 13, 32, 44, 
	46, 69, 101, 9, 10, 43, 45, 48, 
	57, 13, 32, 44, 46, 48, 49, 9, 
	10, 43, 45, 50, 57, 13, 32, 43, 
	45, 46, 48, 49, 9, 10, 50, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	48, 57, 13, 32, 44, 48, 49, 9, 
	10, 13, 32, 48, 49, 9, 10, 13, 
	32, 44, 9, 10, 13, 32, 44, 46, 
	48, 49, 9, 10, 43, 45, 50, 57, 
	13, 32, 43, 45, 46, 48, 49, 9, 
	10, 50, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 46, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 46, 48, 57, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 44, 46, 9, 
	10, 43, 45, 48, 57, 46, 48, 57, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	46, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 69, 101, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 46, 48, 
	57, 48, 57, 0, 13, 32, 44, 46, 
	65, 67, 69, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 101, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 0, 13, 32, 44, 
	46, 65, 67, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 0, 13, 32, 44, 46, 
	65, 67, 69, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 101, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 43, 45, 48, 57, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 46, 48, 57, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 46, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 46, 48, 57, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 44, 46, 9, 
	10, 43, 45, 48, 57, 46, 48, 57, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 69, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 101, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 0, 13, 32, 44, 46, 
	65, 67, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	69, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 101, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 46, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 46, 48, 57, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 69, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 101, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 46, 48, 
	57, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 0, 13, 32, 44, 46, 
	65, 67, 69, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 101, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 43, 45, 48, 57, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 46, 48, 57, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 43, 45, 48, 57, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 0, 13, 
	32, 65, 67, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 0, 
	13, 32, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	13, 32, 46, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 43, 45, 48, 57, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 48, 57, 43, 45, 48, 
	57, 48, 57, 0, 13, 32, 44, 46, 
	65, 67, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 69, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 101, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 13, 32, 44, 9, 
	10, 13, 32, 44, 46, 69, 101, 9, 
	10, 48, 57, 43, 45, 48, 57, 48, 
	57, 13, 32, 44, 9, 10, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 43, 45, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 43, 45, 48, 57, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 43, 45, 48, 57, 48, 
	57, 13, 32, 44, 46, 9, 10, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 44, 9, 10, 13, 
	32, 44, 9, 10, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 43, 45, 48, 
	57, 48, 57, 13, 32, 44, 46, 9, 
	10, 43, 45, 48, 57, 0
};

static unsigned char _svg_path_sl[] = {
	5, 0, 5, 5, 1, 0, 6, 4, 
	1, 0, 27, 25, 1, 0, 6, 4, 
	1, 0, 27, 5, 6, 5, 27, 3, 
	3, 0, 6, 4, 3, 0, 6, 4, 
	1, 0, 5, 5, 4, 3, 5, 4, 
	3, 4, 1, 0, 6, 4, 1, 0, 
	27, 25, 6, 6, 4, 5, 0, 6, 
	6, 7, 6, 5, 4, 3, 6, 7, 
	6, 4, 1, 0, 27, 5, 27, 5, 
	5, 1, 0, 6, 4, 1, 0, 6, 
	4, 1, 0, 6, 4, 1, 0, 6, 
	4, 1, 0, 6, 4, 1, 0, 27, 
	25, 6, 5, 6, 5, 6, 5, 6, 
	5, 6, 5, 27, 2, 0, 25, 5, 
	5, 1, 0, 27, 25, 27, 2, 0, 
	25, 5, 5, 5, 1, 0, 6, 4, 
	1, 0, 6, 4, 1, 0, 6, 4, 
	1, 0, 27, 25, 6, 5, 6, 5, 
	6, 5, 27, 2, 0, 25, 5, 5, 
	1, 0, 6, 4, 1, 0, 6, 4, 
	1, 0, 6, 4, 1, 0, 27, 25, 
	6, 5, 6, 5, 6, 5, 27, 2, 
	0, 25, 5, 5, 1, 0, 6, 4, 
	1, 0, 27, 25, 6, 5, 27, 2, 
	0, 25, 5, 5, 1, 0, 27, 25, 
	27, 2, 0, 25, 23, 23, 3, 5, 
	5, 5, 5, 6, 5, 27, 2, 0, 
	25, 5, 5, 5, 5, 2, 0, 4, 
	2, 0, 4, 2, 0, 4, 2, 0, 
	4, 2, 0, 4, 2, 0, 4, 2, 
	0, 4, 2, 0, 4, 2, 0, 4, 
	2, 0, 4, 2, 0, 4, 2, 0, 
	4, 2, 0, 4, 2, 0, 25, 2, 
	0, 25, 27, 5, 6, 2, 0, 4, 
	6, 3, 6, 2, 0, 3, 6, 2, 
	0, 4, 6, 6, 6, 2, 0, 4, 
	6, 2, 0, 4, 5, 2, 0, 4, 
	5, 3, 3, 6, 2, 0, 25, 2, 
	0, 4, 0
};

static unsigned char _svg_path_rl[] = {
	1, 0, 2, 2, 1, 1, 3, 3, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	1, 1, 3, 2, 3, 2, 3, 2, 
	2, 1, 2, 2, 2, 1, 3, 3, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 3, 1, 1, 3, 3, 1, 1, 
	2, 2, 2, 3, 3, 2, 1, 3, 
	3, 2, 2, 1, 1, 1, 3, 2, 
	3, 3, 1, 1, 3, 2, 2, 2, 
	2, 1, 1, 3, 3, 1, 1, 3, 
	3, 1, 1, 3, 3, 1, 1, 3, 
	3, 1, 1, 3, 3, 1, 1, 3, 
	3, 3, 2, 3, 2, 3, 2, 3, 
	2, 3, 2, 3, 1, 1, 3, 2, 
	2, 1, 1, 3, 3, 3, 1, 1, 
	3, 2, 2, 2, 1, 1, 3, 3, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	1, 1, 3, 3, 3, 2, 3, 2, 
	3, 2, 3, 1, 1, 3, 2, 2, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	3, 2, 3, 2, 3, 2, 3, 1, 
	1, 3, 2, 2, 1, 1, 3, 3, 
	1, 1, 3, 3, 3, 2, 3, 1, 
	1, 3, 2, 2, 1, 1, 3, 3, 
	3, 1, 1, 3, 1, 1, 2, 2, 
	2, 2, 2, 3, 2, 3, 1, 1, 
	3, 2, 2, 2, 2, 1, 1, 3, 
	1, 1, 3, 1, 1, 3, 1, 1, 
	3, 1, 1, 3, 1, 1, 3, 1, 
	1, 3, 1, 1, 3, 1, 1, 3, 
	1, 1, 3, 1, 1, 3, 1, 1, 
	3, 1, 1, 3, 1, 1, 2, 1, 
	1, 3, 3, 2, 3, 1, 1, 3, 
	3, 1, 2, 1, 1, 2, 2, 1, 
	1, 3, 3, 3, 3, 1, 1, 3, 
	3, 1, 1, 3, 2, 1, 1, 2, 
	2, 1, 1, 3, 1, 1, 3, 1, 
	1, 3, 0
};

static unsigned short _svg_path_io[] = {
	0, 7, 7, 15, 23, 26, 28, 38, 
	46, 49, 51, 82, 111, 114, 116, 126, 
	134, 137, 139, 170, 178, 188, 196, 227, 
	233, 239, 241, 250, 257, 263, 265, 275, 
	283, 286, 288, 296, 303, 309, 314, 321, 
	327, 332, 340, 343, 345, 355, 363, 366, 
	368, 398, 426, 435, 445, 453, 461, 463, 
	473, 483, 493, 502, 509, 515, 520, 530, 
	540, 550, 558, 561, 563, 594, 602, 632, 
	640, 648, 651, 653, 663, 671, 674, 676, 
	686, 694, 697, 699, 709, 717, 720, 722, 
	732, 740, 743, 745, 755, 763, 766, 768, 
	799, 828, 838, 846, 856, 864, 874, 882, 
	892, 900, 910, 918, 949, 953, 955, 984, 
	992, 1000, 1003, 1005, 1036, 1065, 1096, 1100, 
	1102, 1131, 1139, 1147, 1155, 1158, 1160, 1170, 
	1178, 1181, 1183, 1193, 1201, 1204, 1206, 1216, 
	1224, 1227, 1229, 1260, 1289, 1299, 1307, 1317, 
	1325, 1335, 1343, 1374, 1378, 1380, 1409, 1417, 
	1425, 1428, 1430, 1440, 1448, 1451, 1453, 1463, 
	1471, 1474, 1476, 1486, 1494, 1497, 1499, 1530, 
	1559, 1569, 1577, 1587, 1595, 1605, 1613, 1644, 
	1648, 1650, 1679, 1687, 1695, 1698, 1700, 1710, 
	1718, 1721, 1723, 1754, 1783, 1793, 1801, 1832, 
	1836, 1838, 1867, 1875, 1883, 1886, 1888, 1919, 
	1948, 1979, 1983, 1985, 2014, 2039, 2064, 2070, 
	2078, 2086, 2094, 2102, 2112, 2120, 2151, 2155, 
	2157, 2186, 2194, 2202, 2210, 2218, 2222, 2224, 
	2232, 2236, 2238, 2246, 2250, 2252, 2260, 2264, 
	2266, 2274, 2278, 2280, 2288, 2292, 2294, 2302, 
	2306, 2308, 2316, 2320, 2322, 2330, 2334, 2336, 
	2344, 2348, 2350, 2358, 2362, 2364, 2372, 2376, 
	2378, 2386, 2390, 2392, 2400, 2404, 2406, 2434, 
	2438, 2440, 2469, 2500, 2508, 2518, 2522, 2524, 
	2532, 2542, 2547, 2556, 2560, 2562, 2568, 2577, 
	2581, 2583, 2591, 2601, 2611, 2621, 2625, 2627, 
	2635, 2645, 2649, 2651, 2659, 2667, 2671, 2673, 
	2680, 2688, 2693, 2698, 2708, 2712, 2714, 2743, 
	2747, 2749, 2757
};

static unsigned short _svg_path_i[] = {
	73, 74, 74, 75, 76, 74, 0, 549, 
	549, 550, 550, 551, 549, 552, 0, 601, 
	601, 602, 602, 603, 601, 604, 0, 622, 
	491, 0, 490, 0, 487, 487, 489, 526, 
	492, 492, 487, 488, 490, 0, 468, 468, 
	420, 422, 468, 421, 423, 0, 385, 127, 
	0, 126, 0, 122, 123, 123, 125, 148, 
	128, 129, 130, 131, 132, 133, 134, 135, 
	136, 137, 138, 139, 140, 130, 141, 142, 
	143, 144, 145, 146, 147, 138, 123, 124, 
	126, 0, 73, 589, 589, 591, 592, 78, 
	79, 80, 81, 75, 82, 83, 84, 85, 
	86, 87, 88, 89, 90, 76, 91, 92, 
	93, 94, 86, 589, 590, 593, 0, 623, 
	497, 0, 496, 0, 493, 493, 495, 528, 
	498, 498, 493, 494, 496, 0, 469, 469, 
	424, 426, 469, 425, 427, 0, 386, 155, 
	0, 154, 0, 150, 151, 151, 153, 176, 
	156, 157, 158, 159, 160, 161, 162, 163, 
	164, 165, 166, 167, 168, 158, 169, 170, 
	171, 172, 173, 174, 175, 166, 151, 152, 
	154, 0, 591, 591, 590, 590, 592, 591, 
	593, 0, 493, 493, 495, 496, 498, 498, 
	493, 494, 497, 0, 424, 424, 425, 425, 
	426, 424, 427, 0, 150, 151, 151, 153, 
	154, 156, 157, 158, 159, 160, 161, 162, 
	163, 164, 165, 166, 167, 168, 158, 169, 
	170, 171, 172, 173, 174, 175, 166, 151, 
	152, 155, 0, 47, 47, 48, 47, 49, 
	0, 8, 8, 9, 8, 10, 0, 381, 
	0, 25, 25, 26, 27, 31, 31, 25, 
	476, 0, 12, 12, 13, 14, 12, 15, 
	0, 13, 13, 14, 13, 15, 0, 35, 
	0, 32, 32, 34, 38, 37, 37, 32, 
	33, 35, 0, 20, 20, 16, 18, 20, 
	17, 19, 0, 2, 3, 0, 23, 0, 
	21, 21, 22, 24, 24, 21, 23, 0, 
	11, 11, 5, 6, 7, 11, 0, 5, 
	5, 6, 7, 5, 0, 45, 45, 46, 
	45, 0, 668, 668, 662, 663, 664, 668, 
	0, 662, 662, 663, 664, 662, 0, 545, 
	545, 546, 545, 0, 621, 621, 617, 416, 
	621, 415, 419, 0, 628, 69, 0, 68, 
	0, 347, 347, 348, 371, 70, 70, 347, 
	66, 68, 0, 475, 475, 456, 458, 475, 
	457, 459, 0, 394, 376, 0, 375, 0, 
	346, 373, 373, 374, 378, 351, 352, 377, 
	354, 355, 356, 357, 358, 359, 360, 361, 
	362, 363, 377, 364, 365, 366, 367, 368, 
	369, 370, 361, 373, 375, 0, 73, 95, 
	95, 8, 9, 78, 79, 80, 81, 75, 
	82, 83, 84, 85, 86, 87, 88, 89, 
	90, 76, 91, 92, 93, 94, 86, 95, 
	10, 0, 25, 25, 26, 29, 31, 31, 
	25, 30, 0, 40, 40, 41, 540, 539, 
	539, 40, 33, 30, 0, 461, 461, 411, 
	412, 461, 17, 413, 0, 411, 411, 17, 
	17, 412, 411, 413, 0, 479, 0, 477, 
	477, 478, 38, 481, 481, 477, 33, 479, 
	0, 460, 460, 408, 18, 409, 410, 460, 
	17, 19, 0, 408, 408, 17, 17, 18, 
	409, 410, 408, 19, 0, 63, 63, 64, 
	23, 24, 24, 63, 3, 0, 669, 669, 
	665, 666, 667, 669, 0, 665, 665, 666, 
	667, 665, 0, 547, 547, 548, 547, 0, 
	467, 467, 414, 416, 417, 418, 467, 415, 
	419, 0, 414, 414, 415, 415, 416, 417, 
	418, 414, 419, 0, 71, 71, 72, 68, 
	70, 70, 71, 66, 69, 0, 474, 474, 
	452, 454, 474, 453, 455, 0, 393, 350, 
	0, 349, 0, 346, 347, 347, 348, 371, 
	351, 352, 353, 354, 355, 356, 357, 358, 
	359, 360, 361, 362, 363, 353, 364, 365, 
	366, 367, 368, 369, 370, 361, 347, 66, 
	349, 0, 456, 456, 457, 457, 458, 456, 
	459, 0, 346, 373, 373, 374, 375, 351, 
	352, 377, 354, 355, 356, 357, 358, 359, 
	360, 361, 362, 363, 377, 364, 365, 366, 
	367, 368, 369, 370, 361, 373, 376, 0, 
	50, 50, 51, 51, 52, 50, 53, 0, 
	98, 98, 97, 97, 99, 98, 100, 0, 
	383, 384, 0, 485, 0, 482, 482, 484, 
	524, 486, 486, 482, 483, 485, 0, 462, 
	462, 464, 465, 462, 463, 466, 0, 760, 
	753, 0, 752, 0, 749, 749, 751, 758, 
	754, 754, 749, 750, 752, 0, 745, 745, 
	731, 733, 745, 732, 734, 0, 746, 692, 
	0, 691, 0, 688, 688, 690, 709, 693, 
	693, 688, 689, 691, 0, 682, 682, 670, 
	672, 682, 671, 673, 0, 685, 633, 0, 
	632, 0, 629, 629, 631, 656, 634, 634, 
	629, 630, 632, 0, 618, 618, 605, 607, 
	618, 606, 608, 0, 624, 503, 0, 502, 
	0, 499, 499, 501, 530, 504, 504, 499, 
	500, 502, 0, 470, 470, 436, 438, 470, 
	437, 439, 0, 389, 239, 0, 238, 0, 
	234, 235, 235, 237, 260, 240, 241, 242, 
	243, 244, 245, 246, 247, 248, 249, 250, 
	251, 252, 242, 253, 254, 255, 256, 257, 
	258, 259, 250, 235, 236, 238, 0, 73, 
	96, 96, 98, 99, 78, 79, 80, 81, 
	75, 82, 83, 84, 85, 86, 87, 88, 
	89, 90, 76, 91, 92, 93, 94, 86, 
	96, 97, 100, 0, 482, 482, 484, 485, 
	486, 486, 482, 483, 384, 0, 464, 464, 
	463, 463, 465, 464, 466, 0, 749, 749, 
	751, 752, 754, 754, 749, 750, 753, 0, 
	731, 731, 732, 732, 733, 731, 734, 0, 
	688, 688, 690, 691, 693, 693, 688, 689, 
	692, 0, 670, 670, 671, 671, 672, 670, 
	673, 0, 629, 629, 631, 632, 634, 634, 
	629, 630, 633, 0, 605, 605, 606, 606, 
	607, 605, 608, 0, 499, 499, 501, 502, 
	504, 504, 499, 500, 503, 0, 436, 436, 
	437, 437, 438, 436, 439, 0, 234, 235, 
	235, 237, 238, 240, 241, 242, 243, 244, 
	245, 246, 247, 248, 249, 250, 251, 252, 
	242, 253, 254, 255, 256, 257, 258, 259, 
	250, 235, 236, 239, 0, 402, 402, 261, 
	0, 261, 0, 234, 235, 235, 237, 260, 
	240, 241, 243, 244, 245, 246, 247, 248, 
	249, 250, 251, 252, 253, 254, 255, 256, 
	257, 258, 259, 250, 235, 236, 261, 0, 
	561, 561, 562, 562, 563, 561, 564, 0, 
	428, 428, 429, 429, 430, 428, 431, 0, 
	387, 183, 0, 182, 0, 178, 179, 179, 
	181, 204, 184, 185, 186, 187, 188, 189, 
	190, 191, 192, 193, 194, 195, 196, 186, 
	197, 198, 199, 200, 201, 202, 203, 194, 
	179, 180, 182, 0, 73, 599, 599, 428, 
	430, 78, 79, 80, 81, 75, 82, 83, 
	84, 85, 86, 87, 88, 89, 90, 76, 
	91, 92, 93, 94, 86, 599, 429, 431, 
	0, 178, 179, 179, 181, 182, 184, 185, 
	186, 187, 188, 189, 190, 191, 192, 193, 
	194, 195, 196, 186, 197, 198, 199, 200, 
	201, 202, 203, 194, 179, 180, 183, 0, 
	400, 400, 205, 0, 205, 0, 178, 179, 
	179, 181, 204, 184, 185, 187, 188, 189, 
	190, 191, 192, 193, 194, 195, 196, 197, 
	198, 199, 200, 201, 202, 203, 194, 179, 
	180, 205, 0, 553, 553, 554, 554, 555, 
	553, 556, 0, 727, 727, 728, 728, 729, 
	727, 730, 0, 739, 739, 740, 740, 741, 
	739, 742, 0, 748, 704, 0, 703, 0, 
	700, 700, 702, 713, 705, 705, 700, 701, 
	703, 0, 684, 684, 678, 680, 684, 679, 
	681, 0, 687, 645, 0, 644, 0, 641, 
	641, 643, 660, 646, 646, 641, 642, 644, 
	0, 620, 620, 613, 615, 620, 614, 616, 
	0, 626, 515, 0, 514, 0, 511, 511, 
	513, 534, 516, 516, 511, 512, 514, 0, 
	472, 472, 444, 446, 472, 445, 447, 0, 
	391, 295, 0, 294, 0, 290, 291, 291, 
	293, 316, 296, 297, 298, 299, 300, 301, 
	302, 303, 304, 305, 306, 307, 308, 298, 
	309, 310, 311, 312, 313, 314, 315, 306, 
	291, 292, 294, 0, 73, 744, 744, 739, 
	741, 78, 79, 80, 81, 75, 82, 83, 
	84, 85, 86, 87, 88, 89, 90, 76, 
	91, 92, 93, 94, 86, 744, 740, 742, 
	0, 700, 700, 702, 703, 705, 705, 700, 
	701, 704, 0, 678, 678, 679, 679, 680, 
	678, 681, 0, 641, 641, 643, 644, 646, 
	646, 641, 642, 645, 0, 613, 613, 614, 
	614, 615, 613, 616, 0, 511, 511, 513, 
	514, 516, 516, 511, 512, 515, 0, 444, 
	444, 445, 445, 446, 444, 447, 0, 290, 
	291, 291, 293, 294, 296, 297, 298, 299, 
	300, 301, 302, 303, 304, 305, 306, 307, 
	308, 298, 309, 310, 311, 312, 313, 314, 
	315, 306, 291, 292, 295, 0, 404, 404, 
	317, 0, 317, 0, 290, 291, 291, 293, 
	316, 296, 297, 299, 300, 301, 302, 303, 
	304, 305, 306, 307, 308, 309, 310, 311, 
	312, 313, 314, 315, 306, 291, 292, 317, 
	0, 723, 723, 724, 724, 725, 723, 726, 
	0, 735, 735, 736, 736, 737, 735, 738, 
	0, 747, 698, 0, 697, 0, 694, 694, 
	696, 711, 699, 699, 694, 695, 697, 0, 
	683, 683, 674, 676, 683, 675, 677, 0, 
	686, 639, 0, 638, 0, 635, 635, 637, 
	658, 640, 640, 635, 636, 638, 0, 619, 
	619, 609, 611, 619, 610, 612, 0, 625, 
	509, 0, 508, 0, 505, 505, 507, 532, 
	510, 510, 505, 506, 508, 0, 471, 471, 
	440, 442, 471, 441, 443, 0, 390, 267, 
	0, 266, 0, 262, 263, 263, 265, 288, 
	268, 269, 270, 271, 272, 273, 274, 275, 
	276, 277, 278, 279, 280, 270, 281, 282, 
	283, 284, 285, 286, 287, 278, 263, 264, 
	266, 0, 73, 743, 743, 735, 737, 78, 
	79, 80, 81, 75, 82, 83, 84, 85, 
	86, 87, 88, 89, 90, 76, 91, 92, 
	93, 94, 86, 743, 736, 738, 0, 694, 
	694, 696, 697, 699, 699, 694, 695, 698, 
	0, 674, 674, 675, 675, 676, 674, 677, 
	0, 635, 635, 637, 638, 640, 640, 635, 
	636, 639, 0, 609, 609, 610, 610, 611, 
	609, 612, 0, 505, 505, 507, 508, 510, 
	510, 505, 506, 509, 0, 440, 440, 441, 
	441, 442, 440, 443, 0, 262, 263, 263, 
	265, 266, 268, 269, 270, 271, 272, 273, 
	274, 275, 276, 277, 278, 279, 280, 270, 
	281, 282, 283, 284, 285, 286, 287, 278, 
	263, 264, 267, 0, 403, 403, 289, 0, 
	289, 0, 262, 263, 263, 265, 288, 268, 
	269, 271, 272, 273, 274, 275, 276, 277, 
	278, 279, 280, 281, 282, 283, 284, 285, 
	286, 287, 278, 263, 264, 289, 0, 557, 
	557, 558, 558, 559, 557, 560, 0, 596, 
	596, 595, 595, 597, 596, 598, 0, 627, 
	521, 0, 520, 0, 517, 517, 519, 536, 
	522, 522, 517, 518, 520, 0, 473, 473, 
	448, 450, 473, 449, 451, 0, 392, 323, 
	0, 322, 0, 318, 319, 319, 321, 344, 
	324, 325, 326, 327, 328, 329, 330, 331, 
	332, 333, 334, 335, 336, 326, 337, 338, 
	339, 340, 341, 342, 343, 334, 319, 320, 
	322, 0, 73, 594, 594, 596, 597, 78, 
	79, 80, 81, 75, 82, 83, 84, 85, 
	86, 87, 88, 89, 90, 76, 91, 92, 
	93, 94, 86, 594, 595, 598, 0, 517, 
	517, 519, 520, 522, 522, 517, 518, 521, 
	0, 448, 448, 449, 449, 450, 448, 451, 
	0, 318, 319, 319, 321, 322, 324, 325, 
	326, 327, 328, 329, 330, 331, 332, 333, 
	334, 335, 336, 326, 337, 338, 339, 340, 
	341, 342, 343, 334, 319, 320, 323, 0, 
	405, 405, 345, 0, 345, 0, 318, 319, 
	319, 321, 344, 324, 325, 327, 328, 329, 
	330, 331, 332, 333, 334, 335, 336, 337, 
	338, 339, 340, 341, 342, 343, 334, 319, 
	320, 345, 0, 565, 565, 566, 566, 567, 
	565, 568, 0, 432, 432, 433, 433, 434, 
	432, 435, 0, 388, 211, 0, 210, 0, 
	206, 207, 207, 209, 232, 212, 213, 214, 
	215, 216, 217, 218, 219, 220, 221, 222, 
	223, 224, 214, 225, 226, 227, 228, 229, 
	230, 231, 222, 207, 208, 210, 0, 73, 
	600, 600, 432, 434, 78, 79, 80, 81, 
	75, 82, 83, 84, 85, 86, 87, 88, 
	89, 90, 76, 91, 92, 93, 94, 86, 
	600, 433, 435, 0, 206, 207, 207, 209, 
	210, 212, 213, 214, 215, 216, 217, 218, 
	219, 220, 221, 222, 223, 224, 214, 225, 
	226, 227, 228, 229, 230, 231, 222, 207, 
	208, 211, 0, 401, 401, 233, 0, 233, 
	0, 206, 207, 207, 209, 232, 212, 213, 
	215, 216, 217, 218, 219, 220, 221, 222, 
	223, 224, 225, 226, 227, 228, 229, 230, 
	231, 222, 207, 208, 233, 0, 101, 102, 
	102, 103, 104, 105, 106, 107, 108, 109, 
	110, 111, 112, 113, 114, 115, 116, 117, 
	118, 119, 120, 121, 112, 102, 0, 73, 
	77, 77, 78, 79, 80, 81, 75, 82, 
	83, 84, 85, 86, 87, 88, 89, 90, 
	76, 91, 92, 93, 94, 86, 77, 0, 
	54, 54, 55, 54, 56, 0, 57, 57, 
	58, 58, 59, 57, 60, 0, 581, 581, 
	582, 582, 583, 581, 584, 0, 573, 573, 
	574, 574, 575, 573, 576, 0, 569, 569, 
	570, 570, 571, 569, 572, 0, 487, 487, 
	489, 490, 492, 492, 487, 488, 491, 0, 
	420, 420, 421, 421, 422, 420, 423, 0, 
	122, 123, 123, 125, 126, 128, 129, 130, 
	131, 132, 133, 134, 135, 136, 137, 138, 
	139, 140, 130, 141, 142, 143, 144, 145, 
	146, 147, 138, 123, 124, 127, 0, 398, 
	398, 149, 0, 149, 0, 122, 123, 123, 
	125, 148, 128, 129, 131, 132, 133, 134, 
	135, 136, 137, 138, 139, 140, 141, 142, 
	143, 144, 145, 146, 147, 138, 123, 124, 
	149, 0, 719, 719, 720, 720, 721, 719, 
	722, 0, 715, 715, 716, 716, 717, 715, 
	718, 0, 577, 577, 578, 578, 579, 577, 
	580, 0, 585, 585, 586, 586, 587, 585, 
	588, 0, 649, 649, 527, 0, 527, 0, 
	487, 487, 489, 526, 487, 488, 527, 0, 
	654, 654, 537, 0, 537, 0, 517, 517, 
	519, 536, 517, 518, 537, 0, 652, 652, 
	533, 0, 533, 0, 505, 505, 507, 532, 
	505, 506, 533, 0, 707, 707, 659, 0, 
	659, 0, 635, 635, 637, 658, 635, 636, 
	659, 0, 756, 756, 712, 0, 712, 0, 
	694, 694, 696, 711, 694, 695, 712, 0, 
	653, 653, 535, 0, 535, 0, 511, 511, 
	513, 534, 511, 512, 535, 0, 708, 708, 
	661, 0, 661, 0, 641, 641, 643, 660, 
	641, 642, 661, 0, 757, 757, 714, 0, 
	714, 0, 700, 700, 702, 713, 700, 701, 
	714, 0, 651, 651, 531, 0, 531, 0, 
	499, 499, 501, 530, 499, 500, 531, 0, 
	706, 706, 657, 0, 657, 0, 629, 629, 
	631, 656, 629, 630, 657, 0, 755, 755, 
	710, 0, 710, 0, 688, 688, 690, 709, 
	688, 689, 710, 0, 761, 761, 759, 0, 
	759, 0, 749, 749, 751, 758, 749, 750, 
	759, 0, 648, 648, 525, 0, 525, 0, 
	482, 482, 484, 524, 482, 483, 525, 0, 
	407, 407, 379, 0, 379, 0, 346, 373, 
	373, 374, 378, 351, 352, 354, 355, 356, 
	357, 358, 359, 360, 361, 362, 363, 364, 
	365, 366, 367, 368, 369, 370, 361, 373, 
	379, 0, 406, 406, 372, 0, 372, 0, 
	346, 347, 347, 348, 371, 351, 352, 354, 
	355, 356, 357, 358, 359, 360, 361, 362, 
	363, 364, 365, 366, 367, 368, 369, 370, 
	361, 347, 66, 372, 0, 346, 347, 347, 
	348, 349, 351, 352, 353, 354, 355, 356, 
	357, 358, 359, 360, 361, 362, 363, 353, 
	364, 365, 366, 367, 368, 369, 370, 361, 
	347, 66, 350, 0, 452, 452, 453, 453, 
	454, 452, 455, 0, 347, 347, 348, 68, 
	70, 70, 347, 66, 69, 0, 655, 655, 
	538, 0, 538, 0, 347, 347, 348, 371, 
	347, 66, 538, 0, 65, 65, 67, 68, 
	70, 70, 65, 66, 69, 0, 543, 543, 
	544, 543, 0, 21, 21, 22, 23, 24, 
	24, 21, 3, 0, 4, 4, 1, 0, 
	1, 0, 21, 21, 22, 21, 1, 0, 
	61, 61, 62, 23, 24, 24, 61, 3, 
	0, 647, 647, 523, 0, 523, 0, 477, 
	477, 478, 38, 477, 33, 523, 0, 477, 
	477, 478, 479, 481, 481, 477, 33, 480, 
	0, 40, 40, 41, 27, 539, 539, 40, 
	33, 476, 0, 40, 40, 41, 42, 539, 
	539, 40, 33, 476, 0, 397, 397, 382, 
	0, 382, 0, 40, 40, 41, 27, 40, 
	33, 28, 0, 40, 40, 41, 42, 37, 
	37, 40, 33, 28, 0, 396, 396, 39, 
	0, 39, 0, 32, 32, 34, 38, 32, 
	33, 39, 0, 16, 16, 17, 17, 18, 
	16, 19, 0, 395, 395, 380, 0, 380, 
	0, 25, 25, 26, 27, 25, 28, 0, 
	617, 617, 415, 415, 416, 617, 419, 0, 
	541, 541, 542, 541, 0, 43, 43, 44, 
	43, 0, 32, 32, 34, 35, 37, 37, 
	32, 33, 36, 0, 399, 399, 177, 0, 
	177, 0, 150, 151, 151, 153, 176, 156, 
	157, 159, 160, 161, 162, 163, 164, 165, 
	166, 167, 168, 169, 170, 171, 172, 173, 
	174, 175, 166, 151, 152, 177, 0, 650, 
	650, 529, 0, 529, 0, 493, 493, 495, 
	528, 493, 494, 529, 0, 0, 0
};

static unsigned short _svg_path_tt[] = {
	1, 277, 33, 274, 276, 36, 37, 298, 
	24, 25, 50, 35, 27, 28, 29, 299, 
	292, 32, 33, 274, 31, 35, 36, 34, 
	275, 27, 28, 29, 288, 26, 51, 293, 
	31, 32, 292, 30, 299, 289, 33, 291, 
	52, 53, 30, 38, 39, 38, 39, 24, 
	25, 50, 72, 73, 74, 97, 24, 25, 
	50, 72, 73, 74, 97, 59, 60, 59, 
	60, 65, 46, 267, 44, 268, 269, 65, 
	267, 306, 0, 2, 210, 205, 23, 71, 
	111, 121, 122, 150, 178, 194, 204, 206, 
	207, 208, 209, 217, 218, 219, 220, 49, 
	96, 73, 72, 74, 97, 306, 205, 23, 
	71, 111, 121, 2, 122, 150, 178, 194, 
	204, 206, 207, 208, 209, 210, 217, 218, 
	219, 220, 306, 11, 12, 19, 10, 213, 
	23, 71, 214, 111, 121, 2, 122, 150, 
	178, 194, 204, 206, 207, 208, 209, 210, 
	217, 218, 219, 220, 13, 216, 306, 11, 
	12, 19, 18, 22, 23, 71, 300, 111, 
	121, 2, 122, 150, 178, 194, 204, 206, 
	207, 208, 209, 210, 217, 218, 219, 220, 
	13, 302, 306, 116, 113, 112, 115, 117, 
	23, 71, 118, 111, 121, 2, 122, 150, 
	178, 194, 204, 206, 207, 208, 209, 210, 
	217, 218, 219, 220, 114, 120, 306, 199, 
	196, 195, 198, 200, 23, 71, 201, 111, 
	121, 2, 122, 150, 178, 194, 204, 206, 
	207, 208, 209, 210, 217, 218, 219, 220, 
	197, 203, 306, 96, 73, 72, 95, 107, 
	23, 71, 108, 111, 121, 2, 122, 150, 
	178, 194, 204, 206, 207, 208, 209, 210, 
	217, 218, 219, 220, 74, 110, 306, 167, 
	152, 151, 166, 174, 23, 71, 175, 111, 
	121, 2, 122, 150, 178, 194, 204, 206, 
	207, 208, 209, 210, 217, 218, 219, 220, 
	153, 177, 306, 139, 124, 123, 138, 146, 
	23, 71, 147, 111, 121, 2, 122, 150, 
	178, 194, 204, 206, 207, 208, 209, 210, 
	217, 218, 219, 220, 125, 149, 306, 187, 
	180, 179, 186, 190, 23, 71, 191, 111, 
	121, 2, 122, 150, 178, 194, 204, 206, 
	207, 208, 209, 210, 217, 218, 219, 220, 
	181, 193, 306, 45, 69, 68, 266, 23, 
	71, 263, 111, 121, 2, 122, 150, 178, 
	194, 204, 206, 207, 208, 209, 210, 217, 
	218, 219, 220, 47, 265, 49, 24, 48, 
	70, 260, 25, 262, 295, 26, 287, 74, 
	97, 9, 17, 114, 197, 94, 165, 137, 
	185, 67, 47, 294, 290, 286, 215, 301, 
	119, 202, 109, 176, 148, 192, 264, 261, 
	57, 58, 278, 53, 54, 282, 63, 42, 
	43, 64, 272, 268, 212, 8, 9, 213, 
	21, 16, 17, 22, 112, 113, 114, 117, 
	195, 196, 197, 200, 106, 93, 94, 107, 
	173, 164, 165, 174, 145, 136, 137, 146, 
	189, 184, 185, 190, 267, 66, 67, 266, 
	69, 46, 47, 70, 56, 52, 76, 77, 
	98, 78, 99, 62, 7, 15, 92, 163, 
	135, 183, 65, 45, 284, 56, 57, 55, 
	282, 279, 76, 77, 98, 75, 257, 7, 
	8, 212, 6, 211, 221, 15, 16, 21, 
	14, 20, 303, 92, 93, 106, 91, 105, 
	245, 163, 164, 173, 162, 172, 227, 135, 
	136, 145, 134, 144, 236, 183, 184, 189, 
	182, 188, 224, 281, 78, 259, 9, 223, 
	17, 305, 94, 247, 165, 229, 137, 238, 
	185, 226, 271, 285, 283, 41, 296, 62, 
	63, 41, 296, 62, 63, 3, 4, 5, 
	211, 19, 12, 13, 20, 179, 180, 181, 
	188, 112, 113, 114, 117, 195, 196, 197, 
	200, 3, 4, 5, 211, 19, 12, 13, 
	20, 179, 180, 181, 188, 112, 113, 114, 
	117, 195, 196, 197, 200, 11, 12, 19, 
	13, 20, 187, 180, 179, 181, 188, 116, 
	199, 3, 4, 5, 211, 104, 89, 90, 
	105, 171, 160, 161, 172, 143, 132, 133, 
	144, 296, 88, 159, 131, 41, 5, 13, 
	90, 161, 133, 181, 43, 88, 89, 104, 
	87, 103, 248, 159, 160, 171, 158, 170, 
	230, 131, 132, 143, 130, 142, 239, 280, 
	258, 222, 304, 246, 228, 237, 225, 270, 
	90, 250, 161, 232, 133, 241, 39, 40, 
	297, 60, 61, 273, 38, 59, 102, 85, 
	86, 103, 169, 156, 157, 170, 141, 128, 
	129, 142, 84, 155, 127, 86, 157, 129, 
	84, 85, 102, 83, 101, 251, 155, 156, 
	169, 154, 168, 233, 127, 128, 141, 126, 
	140, 242, 249, 231, 240, 86, 253, 157, 
	235, 129, 244, 151, 152, 153, 168, 123, 
	124, 125, 140, 151, 152, 153, 168, 123, 
	124, 125, 140, 100, 81, 82, 101, 151, 
	152, 153, 168, 123, 124, 125, 140, 167, 
	139, 80, 82, 153, 125, 80, 81, 100, 
	79, 99, 254, 252, 234, 243, 82, 256, 
	78, 255
};

static unsigned char _svg_path_ta[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 0, 0, 1, 1, 
	0, 1, 1, 1, 0, 3, 3, 0, 
	0, 3, 3, 17, 17, 17, 17, 0, 
	3, 17, 3, 0, 0, 0, 17, 0, 
	3, 3, 17, 5, 5, 7, 7, 9, 
	59, 59, 9, 59, 59, 59, 11, 62, 
	62, 11, 62, 62, 62, 20, 20, 23, 
	23, 53, 17, 53, 0, 0, 0, 56, 
	56, 15, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 1, 1, 65, 13, 13, 
	13, 13, 13, 13, 13, 13, 13, 13, 
	13, 13, 13, 13, 13, 13, 13, 13, 
	13, 13, 72, 26, 68, 26, 0, 0, 
	26, 26, 0, 26, 26, 26, 26, 26, 
	26, 26, 26, 26, 26, 26, 26, 26, 
	26, 26, 26, 26, 68, 0, 80, 29, 
	76, 29, 0, 0, 29, 29, 0, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	76, 0, 88, 32, 84, 32, 0, 0, 
	32, 32, 0, 32, 32, 32, 32, 32, 
	32, 32, 32, 32, 32, 32, 32, 32, 
	32, 32, 32, 32, 84, 0, 96, 35, 
	92, 35, 0, 0, 35, 35, 0, 35, 
	35, 35, 35, 35, 35, 35, 35, 35, 
	35, 35, 35, 35, 35, 35, 35, 35, 
	92, 0, 104, 38, 100, 38, 0, 0, 
	38, 38, 0, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 100, 0, 112, 41, 
	108, 41, 0, 0, 41, 41, 0, 41, 
	41, 41, 41, 41, 41, 41, 41, 41, 
	41, 41, 41, 41, 41, 41, 41, 41, 
	108, 0, 120, 44, 116, 44, 0, 0, 
	44, 44, 0, 44, 44, 44, 44, 44, 
	44, 44, 44, 44, 44, 44, 44, 44, 
	44, 44, 44, 44, 116, 0, 128, 47, 
	124, 47, 0, 0, 47, 47, 0, 47, 
	47, 47, 47, 47, 47, 47, 47, 47, 
	47, 47, 47, 47, 47, 47, 47, 47, 
	124, 0, 136, 3, 3, 0, 0, 50, 
	50, 0, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 17, 0, 50, 50, 0, 
	0, 0, 132, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 1, 1, 0, 1, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 0, 0, 0, 1, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 17, 3, 3, 0, 
	0, 0, 3, 17, 3, 0, 0, 3, 
	17, 3, 0, 0, 0, 3, 17, 3, 
	0, 0, 0, 3, 17, 3, 0, 0, 
	0, 3, 17, 3, 0, 0, 0, 3, 
	17, 3, 0, 0, 0, 3, 17, 3, 
	0, 0, 0, 0, 17, 0, 17, 0, 
	17, 0, 17, 0, 17, 0, 17, 0, 
	17, 0, 0, 0, 17, 5, 5, 5, 
	5, 7, 7, 7, 7, 9, 59, 59, 
	59, 9, 59, 59, 59, 9, 59, 59, 
	59, 9, 59, 59, 59, 9, 59, 59, 
	59, 11, 62, 62, 62, 11, 62, 62, 
	62, 11, 62, 62, 62, 11, 62, 62, 
	62, 11, 62, 62, 62, 0, 1, 0, 
	1, 1, 0, 1, 0, 1, 1, 0, 
	0, 0, 1, 1, 1, 0, 1, 1, 
	1, 0, 1, 1, 1, 0, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 3, 17, 3, 
	0, 0, 0, 3, 17, 3, 0, 0, 
	0, 3, 17, 3, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	17, 0, 17, 0, 17, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 1, 0, 1, 1, 1, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	3, 17, 3, 0, 0, 0, 3, 17, 
	3, 0, 0, 0, 3, 17, 3, 0, 
	0, 0, 0, 0, 0, 17, 0, 17, 
	0, 17, 0, 11, 62, 62, 62, 11, 
	62, 62, 62, 9, 59, 59, 59, 9, 
	59, 59, 59, 0, 1, 1, 1, 0, 
	1, 1, 1, 0, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 3, 17, 3, 
	0, 0, 0, 0, 0, 0, 17, 0, 
	0, 0
};

static int svg_path_start = 0;

static int svg_path_first_final = 306;

#line 132 "/home/michael/2geom/src/svg-path-parser.rl"


void Parser::parse(char const *str)
throw(SVGPathParseError)
{
    char const *p = str;
    char const *start = NULL;
    int cs;

    _reset();

    
#line 1269 "/home/michael/2geom/src/svg-path-parser.cpp"
	{
	cs = svg_path_start;
	}
	{
	int _slen, _rlen;
	unsigned int _trans;
	unsigned char *_acts;
	unsigned int _nacts;
	char *_keys;

	p -= 1;
	goto resume;

again:
resume:
	p += 1;
	_keys = _svg_path_k + _svg_path_ko[cs];
	_trans = _svg_path_io[cs];

	_slen = _svg_path_sl[cs];
	if ( _slen > 0 ) {
		char *_lower = _keys;
		char *_mid;
		char *_upper = _keys + _slen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				goto match;
			}
		}
		_keys += _slen;
		_trans += _slen;
	}

	_rlen = _svg_path_rl[cs];
	if ( _rlen > 0 ) {
		char *_lower = _keys;
		char *_mid;
		char *_upper = _keys + (_rlen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				goto match;
			}
		}
		_trans += _rlen;
	}

	if ( cs == 1 )
		goto _out;
match:
	_trans = _svg_path_i[_trans];
	cs = _svg_path_tt[_trans];

	if ( _svg_path_ta[_trans] == 0 )
		goto again;

	_acts = _svg_path_a + _svg_path_ta[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
#line 144 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            start = p;
        }
	break;
	case 1:
#line 148 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            char const *end=p;
            std::string buf(start, end);
            _push(strtod(buf.c_str(), NULL));
            start = NULL;
        }
	break;
	case 2:
#line 155 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _push(1.0);
        }
	break;
	case 3:
#line 159 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _push(0.0);
        }
	break;
	case 4:
#line 163 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _absolute = true;
        }
	break;
	case 5:
#line 167 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _absolute = false;
        }
	break;
	case 6:
#line 171 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _moveTo(_pop_point());
        }
	break;
	case 7:
#line 175 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _lineTo(_pop_point());
        }
	break;
	case 8:
#line 179 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _lineTo(Point(_pop_coord(X), _current[Y]));
        }
	break;
	case 9:
#line 183 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _lineTo(Point(_current[X], _pop_coord(Y)));
        }
	break;
	case 10:
#line 187 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            Point c1 = _pop_point();
            Point c0 = _pop_point();
            _curveTo(c0, c1, p);
        }
	break;
	case 11:
#line 194 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            Point c1 = _pop_point();
            _curveTo(_cubic_tangent, c1, p);
        }
	break;
	case 12:
#line 200 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            Point c = _pop_point();
            _quadTo(c, p);
        }
	break;
	case 13:
#line 206 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            _quadTo(_quad_tangent, p);
        }
	break;
	case 14:
#line 211 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            Point point = _pop_point();
            bool sweep = _pop_flag();
            bool large_arc = _pop_flag();
            double angle = _pop();
            double ry = _pop();
            double rx = _pop();

            _arcTo(rx, ry, angle, large_arc, sweep, point);
        }
	break;
	case 15:
#line 222 "/home/michael/2geom/src/svg-path-parser.rl"
	{
            _closePath();
        }
	break;
	case 16:
#line 359 "/home/michael/2geom/src/svg-path-parser.rl"
	{goto _out;}
	break;
#line 1467 "/home/michael/2geom/src/svg-path-parser.cpp"
		}
	}

	goto again;
	_out: {}
	}
#line 369 "/home/michael/2geom/src/svg-path-parser.rl"


    if ( cs < svg_path_first_final ) {
        throw SVGPathParseError();
    }
}

}

void parse_svg_path(char const *str, SVGPathSink &sink)
throw(SVGPathParseError)
{
    Parser parser(sink);
    parser.parse(str);
    sink.finish();
}

}

/*
  Local Variables:
  mode:c++
  c-file-style:"stroustrup"
  c-file-offsets:((innamespace . 0)(inline-open . 0)(case-label . +))
  indent-tabs-mode:nil
  fill-column:99
  End:
*/
// vim: filetype=cpp:expandtab:shiftwidth=4:tabstop=8:softtabstop=4:encoding=utf-8:textwidth=99 :
