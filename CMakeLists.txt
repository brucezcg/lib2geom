PROJECT(lib2geom CXX)

#BUILD_COMMAND(variable make)

SET(2GEOM_TOYS_SRC
arc-bez
choose_test
clothoid
#conic-2
conic-3
conic-4
conic
convex-test
fitter
one-D
path
#path.h
path-to-svgd
#path-to-svgd.h
poly-test
quad-test
rat-bez
root-finder-comparer
sb1d
sb2d
s-bez
#tensor-reparam
toy-cairo
unit-test-sbasis
)
SET(2GEOM_SRC
arc-length.cpp
arc-length.h
bezier-to-sbasis.h
bezier-utils.cpp
bezier-utils.h
bezier-utils-test.cpp
bez-test.cpp
beztype.cpp
b-spline.cpp
centroid.cpp
centroid.h
choose.h
circulator.h
compose.cpp
compose.h
compose-transform.cpp
compose-transform.h
conjugate_gradient.cpp
conjugate_gradient.h
convex-cover.cpp
convex-cover.h
convex-hull.h
convex-hull-ops.h
coord.h
cubic_bez_util.cpp
cubic_bez_util.h
decimal-round.h
dim2.h
floating.h
forward.h
geom.cpp
geom.h
i-coord.h
interactive-bits.cpp
interactive-bits.h
#interactive-bits.h.gch
isnan.h
#libnr.def
macros.h
matrix.cpp
matrix-div.cpp
matrix-div.h
matrix-fns.cpp
matrix-fns.h
matrix.h
matrix-ops.h
matrix-rotate-ops.cpp
matrix-rotate-ops.h
matrix-scale-ops.cpp
matrix-scale-ops.h
matrix-test.cpp
matrix-test.h
matrix-translate-ops.cpp
matrix-translate-ops.h
maybe.h
multidim-sbasis.h
nearestpoint.cpp
object.cpp
object.h
#ode-toy-cairo.cpp
path-builder.h
path-cairo.cpp
path-cairo.h
#path-cairo.h.gch
path-cubicto.cpp
path-find-points-of-interest.cpp
path-find-points-of-interest.h
path-intersect.cpp
path-intersect.h
path-metric.cpp
path-metric.h
path-ops.cpp
path-ops.h
path-poly-fns.h
path-sbasis.h
path-to-polyline.cpp
path-to-polyline.h
point-fns.cpp
point-fns.h
point-fns-test.cpp
point-fns-test.h
point.h
point-l.h
point-matrix-ops.h
point-ops.h
poly.cpp
poly-dk-solve.cpp
poly-dk-solve.h
poly.h
poly-laguerre-solve.cpp
poly-laguerre-solve.h
quadtree.cpp
quadtree.h
read-svgd.cpp
read-svgd.h
rect.cpp
rect.h
rect-l.cpp
rect-l.h
rect-ops.h
refcounted.h
rotate-fns.cpp
rotate-fns.h
rotate-fns-test.cpp
rotate-fns-test.h
rotate.h
rotate-matrix-ops.cpp
rotate-matrix-ops.h
rotate-ops.h
rotate-test.cpp
rotate-test.h
round.h
s-basis-2d.h
s-basis-2d.cpp
s-basis.cpp
s-basis.h
s-basis-roots.cpp
sbasis-poly.cpp
sbasis-poly.h
sbasis-to-bezier.cpp
sbasis-to-bezier.h
scale.h
scale-matrix-ops.cpp
scale-matrix-ops.h
scale-ops.h
scale-test.cpp
scale-test.h
scale-translate-ops.cpp
scale-translate-ops.h
solve-bezier-one-d.cpp
solve-bezier-parametric.cpp
solver.h
sturm.h
test_cg.cpp
#toy.cpp
translate.h
translate-matrix-ops.cpp
translate-matrix-ops.h
translate-ops.h
translate-rotate-ops.cpp
translate-rotate-ops.h
translate-scale-ops.cpp
translate-scale-ops.h
translate-test.cpp
translate-test.h
types.cpp
types.h
types-test.cpp
types-test.h
values.cpp
values.h
)
# make lib for 2geom
ADD_LIBRARY(lib2geom STATIC ${2GEOM_SRC})
ADD_DEPENDENCIES(lib2geom
refblas3-1.2
cairo-1.1.7
gtk+-2.0
glib2.0-2.10.3
gsl0-1.7
)
FOREACH(source ${2GEOM_TOYS_SRC})
    ADD_EXECUTABLE(${source} ${source}.cpp)
    TARGET_LINK_LIBRARIES(${source} lib2geom)
ENDFOREACH(source)
